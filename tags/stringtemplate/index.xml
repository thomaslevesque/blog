<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>StringTemplate on Thomas Levesque&#39;s .NET Blog</title>
    <link>https://thomaslevesque.com/tags/stringtemplate/</link>
    <description>Recent content in StringTemplate on Thomas Levesque&#39;s .NET Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Nov 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://thomaslevesque.com/tags/stringtemplate/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>StringTemplate: another approach to string interpolation</title>
      <link>https://thomaslevesque.com/2014/11/17/stringtemplate-another-approach-to-string-interpolation/</link>
      <pubDate>Mon, 17 Nov 2014 00:00:00 +0000</pubDate>
      <guid>https://thomaslevesque.com/2014/11/17/stringtemplate-another-approach-to-string-interpolation/</guid>
      <description>With the upcoming version 6 of C#, there’s a lot of talk on CodePlex and elsewhere about string interpolation. Not very surprising, since it’s one of the major features of that release… In case you were living under a rock during the last few months and you haven’t heard about it, string interpolation is a way to insert C# expressions inside a string, so that they’re evaluated at runtime and replaced with their values.</description>
    </item>
  </channel>
</rss>
