<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>version control on Thomas Levesque&#39;s .NET Blog</title>
    <link>https://thomaslevesque.com/tags/version-control/</link>
    <description>Recent content in version control on Thomas Levesque&#39;s .NET Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Mar 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://thomaslevesque.com/tags/version-control/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cleanup Git history to remove unwanted files</title>
      <link>https://thomaslevesque.com/2018/03/06/cleanup-git-history-to-remove-unwanted-files/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://thomaslevesque.com/2018/03/06/cleanup-git-history-to-remove-unwanted-files/</guid>
      <description>I recently had to work with a Git repository whose modifications needed to be ported to another repo. Unfortunately, the repo had been created without a .gitignore file, so a lot of useless files (bin/obj/packages directories&amp;hellip;) had been commited. This made the history hard to follow, because each commit had hundreds of modified files.
Fortunately, it&amp;rsquo;s rather easy with Git to cleanup a branch, by recreating the same commits without the files that shouldn&amp;rsquo;t have been there in the first place.</description>
    </item>
  </channel>
</rss>
