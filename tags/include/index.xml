<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Include on Thomas Levesque&#39;s .NET Blog</title>
    <link>https://thomaslevesque.com/tags/include/</link>
    <description>Recent content in Include on Thomas Levesque&#39;s .NET Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Oct 2010 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://thomaslevesque.com/tags/include/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Entity Framework] Using Include with lambda expressions</title>
      <link>https://thomaslevesque.com/2010/10/03/entity-framework-using-include-with-lambda-expressions/</link>
      <pubDate>Sun, 03 Oct 2010 00:00:00 +0000</pubDate>
      <guid>https://thomaslevesque.com/2010/10/03/entity-framework-using-include-with-lambda-expressions/</guid>
      <description>I&amp;rsquo;m currently working on a project that uses Entity Framework 4. Even though lazy loading is enabled, I often use the ObjectQuery.Include method to eagerly load associated entities, in order to avoid database roundtrips when I access them:&#xA;var query = from ord in db.Orders.Include(&amp;#34;OrderDetails&amp;#34;) where ord.Date &amp;gt;= DateTime.Today select ord; Or if I also want to eagerly load the product:&#xA;var query = from ord in db.Orders.Include(&amp;#34;OrderDetails.Product&amp;#34;) where ord.Date &amp;gt;= DateTime.</description>
    </item>
  </channel>
</rss>
