<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.NET 4.0 on Thomas Levesque&#39;s .NET Blog</title>
    <link>https://thomaslevesque.com/tags/.net-4.0/</link>
    <description>Recent content in .NET 4.0 on Thomas Levesque&#39;s .NET Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Oct 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://thomaslevesque.com/tags/.net-4.0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Entity Framework] Using Include with lambda expressions</title>
      <link>https://thomaslevesque.com/2010/10/03/entity-framework-using-include-with-lambda-expressions/</link>
      <pubDate>Sun, 03 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://thomaslevesque.com/2010/10/03/entity-framework-using-include-with-lambda-expressions/</guid>
      <description>I&amp;rsquo;m currently working on a project that uses Entity Framework 4. Even though lazy loading is enabled, I often use the ObjectQuery.Include method to eagerly load associated entities, in order to avoid database roundtrips when I access them:
var query =  from ord in db.Orders.Include(&amp;#34;OrderDetails&amp;#34;)  where ord.Date &amp;gt;= DateTime.Today  select ord; Or if I also want to eagerly load the product:
var query =  from ord in db.</description>
    </item>
    
    <item>
      <title>[VS2010] Binding support in InputBindings</title>
      <link>https://thomaslevesque.com/2009/10/26/vs2010-binding-support-in-inputbindings/</link>
      <pubDate>Mon, 26 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>https://thomaslevesque.com/2009/10/26/vs2010-binding-support-in-inputbindings/</guid>
      <description>THE feature that was missing from WPF ! Visual Studio 2010 beta 2 has been released last week, and it brings to WPF a long awaited feature : support for bindings in InputBindings.
As a reminder, the issue in previous releases was that the Command property of the InputBinding class wasn&amp;rsquo;t a DependencyProperty, so it wasn&amp;rsquo;t possible to bind it. Furthermore, InputBindings didn&amp;rsquo;t inherit the parent DataContext, which made it difficult to provide alternative implementations&amp;hellip;</description>
    </item>
    
    <item>
      <title>[C# 4.0] Implementing a custom dynamic object</title>
      <link>https://thomaslevesque.com/2009/10/08/c-4-0-implementing-a-custom-dynamic-object/</link>
      <pubDate>Thu, 08 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>https://thomaslevesque.com/2009/10/08/c-4-0-implementing-a-custom-dynamic-object/</guid>
      <description>If you&amp;rsquo;ve been following the news about .NET, you probably know that the upcoming version 4.0 of C# introduces a new dynamic type. This type allows to access members of an object which are not statically known (at compile time). These members will be resolved at runtime, thanks to the DLR (Dynamic Language Runtime). This feature makes it easier to manipulate COM objects, or any object which type is not statically known.</description>
    </item>
    
  </channel>
</rss>
